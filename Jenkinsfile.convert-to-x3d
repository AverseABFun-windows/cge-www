/* -*- mode: groovy -*-
  Updating Docker image for https://castle-engine.io/convert.php using Jenkins.
  See https://github.com/castle-engine/castle-engine/wiki/Cloud-Builds-(Jenkins) for syntax of this file.
*/

pipeline {
  agent none // each stage has a particular agent

  // this builds + uploads a Docker image, do not upload 2 images in parallel
  options { disableConcurrentBuilds()  }

  triggers {
    /* Update automatically when cge-www repo changes, or castle-engine (Docker image) changes. */
    pollSCM('H/4 * * * *')
    upstream(upstreamProjects: 'castle_game_engine_organization/castle-engine-cloud-builds-tools/master', threshold: hudson.model.Result.SUCCESS)
  }

  stages {
    stage('Build Binaries with FPC') {
      // we need agent where FPC is installed
      agent {
        docker {
          image 'kambi/castle-engine-cloud-builds-tools:cge-none'
        }
      }
      steps {
        dir ("convert-to-x3d/docker-image/") {
          sh './build_fpc.sh'
          stash name: 'binaries-made-by-fpc', includes: 'tmp/view3dscene/view3dscene,tmp/view3dscene/code/tovrmlx3d'
        }
      }
    }
    stage('Build and Upload Docker Image') {
      // we need agent where Docker is installed
      agent {
        label 'jenkins-conv-x3d-docker-uploader'
      }
      steps {
        sh "rm -Rf convert-to-x3d/docker-image/docker-context/"
        sh "mkdir -p convert-to-x3d/docker-image/docker-context/bin/"
        dir ("convert-to-x3d/docker-image/docker-context/bin/") {
          unstash name: 'binaries-made-by-fpc'
        }
        dir ("convert-to-x3d/docker-image/") {
          sh './build_docker_1_build.sh'
          sh './build_docker_2_test.sh'
          withCredentials([
            string(credentialsId: 'docker-user', variable: 'docker_user'),
            string(credentialsId: 'docker-password', variable: 'docker_password')
          ]) {
            sh './build_docker_3_upload.sh'
          }
        }
      }
    }
  }
  post {
    regression {
      mail to: 'michalis@castle-engine.io',
        subject: "[jenkins] Build started failing: ${currentBuild.fullDisplayName}",
        body: "See the build details on ${env.BUILD_URL}"
    }
    failure {
      mail to: 'michalis@castle-engine.io',
        subject: "[jenkins] Build failed: ${currentBuild.fullDisplayName}",
        body: "See the build details on ${env.BUILD_URL}"
    }
    fixed {
      mail to: 'michalis@castle-engine.io',
        subject: "[jenkins] Build is again successful: ${currentBuild.fullDisplayName}",
        body: "See the build details on ${env.BUILD_URL}"
    }
  }
}

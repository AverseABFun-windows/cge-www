There are many automated tests of our engine, useful to run
this (on each platform) before release:

# Basic compilation tests

./test_program_compilation.sh unix|windows
cd kambi_vrml_game_engine/
make clean_container_units container_units # not a test, but useful to run
                                           # and eventually commit
make
make examples

# FPCUnit tests

cd tests/
./compile_console.sh # also "make clean -C .." and then recompile all
                     # in debug mode for compile_console.sh
./test_kambi_units -a

# Test view3dscene VRML/X3D loading/saving/rendering

cd view3dscene/
./run_tests.sh
# (You may also uncomment longer mk_screnshot tests in run_test_once.sh
# and rerun run_tests.sh)

# Test Lazarus compilation:
# - Recompile kambi_vrml_game_engine packages
# - Compile and run
#     view3dscene,
#     castle,
#     3dmodels.gl/examples/simplest_vrml_browser
#   from Lazarus lpi files
# - Compile and run lazarus_vrml_browser

# Make sure Lazarus packages have all units included.

  # This can be tested by
  cd kambi_vrml_game_engine/
  make clean
  make
  # Now compile our packages from Lazarus,
  # letting Lazarus remove ppu files of units that belong to package.
  # This will leave only ppu files of units that don't belong to packages,
  # but were compiled during "make", thus providing us with a simple
  # way to check what is possibly missing from package:
  find . -iname '*.ppu'

  # Should find only files
  # - inside packages/../lib/
  # - allkambi*.pas units (that's ok, they are not part of any package
  #   and are not used by any program)
  # - units inside examples/, tools/ dir
  # - units inside dir of other OS (for example, leftovers in unix/
  #   dir were not cleaned by windows package, that's ok)
  # - units that I deliberatly do not want to put in a package for now:
  #   ./opengl/glw_win.ppu (would require separate package, like kambi_glwindow_navigated)
  #   ./opengl/kambiglut.ppu (depends on glut, none of my programs actually uses it)
  #   ./opengl/glw_demo.ppu (would require separate package, like kambi_glwindow_navigated)
  #   ./opengl/unix/kambiglx.ppu (required only for GLWindow Xlib backend --- hm, maybe add?)

# Test are there no files with accidental svn:executable attrib
# (may happen if commiting from FAT filesystems on Unix):

  find . -executable -type f | grep -v ".sh$" | grep -v "~$"

# Test fpmake compilation system:
  export FPCDIR=/home/michalis/installed/fpc/current/lib/fpc/2.2.4/
  fpc fpmake.pp
  ./fpmake build
  ./fpmake clean
  ./fpmake build --nofpccfg

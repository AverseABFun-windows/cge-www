htodcs/ is exactly what goes into http://vrmlengine.sourceforge.net/

screenshots/ are only a copy (sometimes with better resolution)
of the same screenshots that are available on SF screenshot
page of our project.

scripts/ are various scripts, usually in bash, helpful to manage the
website. Scripts inside scripts/shell.sf.net are meant to be
run when logged on shell.sourceforge.net server, i.e. these scripts
are supposed to work on currently "online" version on the website on SF.
Other scripts are meant to be run on your local version, checkouted
somewhere on your local computer.

----------------------------------------
How counters dir was created:

cd /tmp/persistent
mkdir vrmlengine
cd vrmlengine
mkdir counters
chgrp vrmlengine counters
chmod g+x counters
chmod g+w counters

Result: l shows now
drwxrwxr-x  2 kambi vrmlengine 4096 Jul 24 22:25 counters/

Note that without "chmod o+w counters" other people
cannot add new files or delete files from this directory
(either using WWW scripts, that run as nobody, or from SF shell).
Although they can freely modify or empty the files contents,
hopefully this will secure me at least against some stupid attackers
that try to "cd" some dirs inside /tmp/persistent/ and execute rm -Rf *.
I cannot get real security on /tmp/persistent/ on SF, so I take what I can.

This also means that all counter files will have to be created first,
from shell server. init_counters.sh may be used to create counters
from scratch, counters for pages previously existing on
http://camelot.homedns.org/~michalis/ were moved to SF.

Counters should have permissions 666 (read-write by all).
There's no escape from this, Apache must be able to read-write them.

----------------------------------------
Procedure to update WWW content:
("locally" means that this is done on a local copy of the repository
www/ directory, preferably *not* on "online" copy on shell.sf.net):

- Release on SourceForge (hint: use releaseforge for comfort).
  releasename is just a version number.
  As changelog, paste
    See http://vrmlengine.sourceforge.net/changes_log.php
  After release, download and compare are the files the same.

- if you modified kambi_vrml_game_engine, you may want to update apidoc/

- good practice after large changes is to check
  linkchecker.sh and validate_html.sh

- if it's important change, you may wish to add entry to changes_log_common.php

- if you change some content managed inside SVN:
  - commit your changes, of course
  - svn update on SF within htdocs/

- if you change some content outside SVN:
  (These are some things that are automatically generated and it would
  be a waste to keep them inside SVN repository... so they have to
  be copied in a normal way.) :
  - upload on SF within htdocs/ all that's needed
  - make sure that "other" users don't have uncessesary permissions
    (files created by svn inside .svn and files updated by SVN
    should get OK permissions from start, but "content outside SVN"
    may have too permissive permissions after uploading e.g. if I upload
    by nautilus): run secure_permissions.sh on SF
  - run mk_sums_md5.sh locally. This calculates md5 sums on your local
    files.
  - on SF shell server, run check_sums_md5.sh. This will check md5 sums
    uploaded in previous step, thus checking that all files (even those
    ignored by SVN) were uploaded correctly.

- if you want to create some new counters, make sure to update
  script init_counters.sh and then run it on SF

- after important release, I may wish to announce it:
  - sf news for vrmlengine project
  - engine source code release means updating FPC contrib units info
    (see fpc_contrib_units_data.txt,
    http://www.freepascal.org/contrib/db.php3?category=Graphics).
  - new release of view3dscene and/or castle go to freshmeat:
    http://freshmeat.net/projects/view3dscene/
    http://freshmeat.net/projects/castlegame/
  - pascalgamedevelopment may be informed about especially important
    releases
  - really large new features may cause updates of project
    description on SF and cia.vc

htodcs/ is exactly what goes into http://vrmlengine.sourceforge.net/

screenshots/ are only a copy (sometimes with better resolution)
of the same screenshots that are available on SF screenshot
page of our project.

scripts/ various scripts, usually in Bash, helpful to manage the
website. Scripts inside scripts/shell.sf.net are meant to be
run when logged on shell.sourceforge.net server, i.e. these scripts
are supposed to work on currently "online" version on the website on SF.
Other scripts are meant to be run on your local version, checkout
out somewhere on your local computer.

----------------------------------------
How counters dir was created:

cd /tmp/persistent
mkdir vrmlengine
cd vrmlengine
mkdir counters
chgrp vrmlengine counters
chmod g+x counters
chmod g+w counters

Result: l shows now
drwxrwxr-x  2 kambi vrmlengine 4096 Jul 24 22:25 counters/

Note that without "chmod o+w counters" other people
cannot add new files or delete files from this directory
(either using WWW scripts, that run as nobody, or from SF shell).
Although they can freely modify or empty the files contents,
hopefully this will secure me at least against some stupid attackers
that try to "cd" some dirs inside /tmp/persistent/ and execute rm -Rf *.
I cannot get real security on /tmp/persistent/ on SF, so I take what I got.

This also means that all counter files will have to be created first,
from shell server. init_counters.sh may be used to create counters
from scratch, counters for pages previously existing on
http://camelot.homedns.org/~michalis/ will be moved to SF.

----------------------------------------
Procedure to update WWW content:
("locally" means that this is done on a local copy of the repository
www/ directory, preferably *not* on "online" copy on shell.sf.net):

- if you modified kambi_vrml_game_engine, you may want to update apidoc/

- good practice after large changes is to check for dead links
  by linkchecker.sh

- if it's important change, you may wish to update last_update.php
  and changes_log.php pages.

- if you change some content managed inside SVN:
  - commit your changes, of course
  - svn update on SF within htdocs/

- if you change some content outside SVN:
  (These are some things that are automatically generated and it would
  be a waste to keep them inside SVN repository... so they have to
  be copied in a normal way.) :
  - upload on SF within htdocs/ all that's needed
  - run mk_sums_md5.sh locally. This calculates md5 sums on your local
    files.
  - on SF shell server, run check_sums_md5.sh. This will check md5 sums
    uploaded in previous step, thus checking that all files (even those
    ignored by SVN) were uploaded correctly.

#!/bin/bash
set -eu

# Script run by Jenkins (Automatic Cloud Builds of Castle Game Engine projects) on
# https://michalis.ii.uni.wroc.pl/jenkins/ to update CGE snapshots
# visible on http://michalis.ii.uni.wroc.pl/castle-engine-snapshots/ .
# Parts of this script are really specific to the Jenkins
# and michalis.ii.uni.wroc.pl server configuration.
#
# Rebuild programs in "${CASTLE_ENGINE_PATH}"
# (does a full rebuild, updating from SVN and cleaning to make
# a full build with newest sources),
# then move resulting binaries to "${CASTLE_SNAPSHOTS_PATH}" subdir.

export CASTLE_SNAPSHOTS_PATH="/var/www/castle-engine-snapshots/"

# prepare output path and log file
export OUTPUT_PATH="${CASTLE_SNAPSHOTS_PATH}"`date +%F`/
mkdir -p "$OUTPUT_PATH"

# castle-engine (used to compile some stuff) uses this,
# also some "cd" commands may use it.
export CASTLE_ENGINE_PATH=`pwd`/

# ----------------------------------------------------------------------------

do_compile_tool ()
{
  echo '---------------------------------------------------------------'
  echo 'Compiling tools for snapshots'

  CASTLE_BIN_PATH="${CASTLE_ENGINE_PATH}"snapshots-bin/
  mkdir -p "${CASTLE_BIN_PATH}"
  export PATH="${PATH}":"${CASTLE_BIN_PATH}"

  cd "${CASTLE_ENGINE_PATH}"castle_game_engine/tools/build-tool/
  ./castle-engine_compile.sh
  mv -f castle-engine "${CASTLE_BIN_PATH}"

  cd "${CASTLE_ENGINE_PATH}"castle_game_engine/examples/tools/
  ./dircleaner_compile.sh
  mv -f dircleaner "${CASTLE_BIN_PATH}"

  cd "${CASTLE_ENGINE_PATH}"castle_game_engine/tools/image-to-pascal/
  ./image-to-pascal_compile.sh
  mv -f image-to-pascal "${CASTLE_BIN_PATH}"

  echo '---------------------------------------------------------------'
  echo 'Cleaning everything (except binaries of tools compiled above)'

  cd "${CASTLE_ENGINE_PATH}"
  scripts/clean_everything.sh
}

# ----------------------------------------------------------------------------

move_all_programs ()
{
  EXT="$1"
  OUT_PATH="$OUTPUT_PATH""$2"

  mkdir -p "$OUT_PATH"

  mv castle/castle"$EXT" "$OUT_PATH"
  mv glinformation/glinformation"$EXT" "$OUT_PATH"
  mv glinformation/glinformation_glut"$EXT" "$OUT_PATH"
  mv glplotter/gen_function"$EXT" "$OUT_PATH"
  mv glplotter/glplotter"$EXT" "$OUT_PATH"
  mv glviewimage/glViewImage"$EXT" "$OUT_PATH"
  mv kambi_lines/kambi_lines"$EXT" "$OUT_PATH"
  mv malfunction/malfunction"$EXT" "$OUT_PATH"
  mv rayhunter/rayhunter"$EXT" "$OUT_PATH"
  mv view3dscene/view3dscene"$EXT" "$OUT_PATH"
  mv view3dscene/tovrmlx3d"$EXT" "$OUT_PATH"
}

do_compile_snapshot_programs ()
{
  echo '---------------------------------------------------------------'
  echo 'Compiling all programs'

  cd "${CASTLE_ENGINE_PATH}"
  scripts/clean_everything.sh

  scripts/compile_all_programs.sh
  move_all_programs '' linux-i386

  export CASTLE_FPC_OPTIONS=-Twin32
  export CASTLE_ENGINE_TOOL_OPTIONS=--os=win32
  scripts/compile_all_programs.sh
  move_all_programs '.exe' win-i386
  export CASTLE_FPC_OPTIONS=''
  export CASTLE_ENGINE_TOOL_OPTIONS=''

  export CASTLE_FPC_OPTIONS='-Twin64 -Px86_64'
  export CASTLE_ENGINE_TOOL_OPTIONS='--os=win64 --cpu=x86_64'
  scripts/compile_all_programs.sh
  move_all_programs '.exe' win-x86_64
  export CASTLE_FPC_OPTIONS=''
  export CASTLE_ENGINE_TOOL_OPTIONS=''

  echo '---------------------------------------------------------------'
  echo 'Compiled OK, moving to the "latest" symlink.'

  # Clean old snapshots, to conserve disk space.
  # Keep only snapshots from last couple of days.
  cd "${CASTLE_SNAPSHOTS_PATH}"
  set +e
  find . -mindepth 1 -maxdepth 1 \
    -type d -and \
    -name '????-??-??' -and \
    '(' -not -iname `date +%F` ')' -and \
    '(' -not -iname `date --date='-1 day' +%F` ')' -and \
    '(' -not -iname `date --date='-2 day' +%F` ')' -and \
    '(' -not -iname `date --date='-3 day' +%F` ')' -and \
    '(' -not -iname `date --date='-4 day' +%F` ')' -and \
    '(' -not -iname `date --date='-5 day' +%F` ')' -and \
    '(' -not -iname `date --date='-6 day' +%F` ')' -and \
    '(' -not -iname `date --date='-7 day' +%F` ')' -and \
    -exec rm -Rf '{}' ';'
  set -e

  # Create "latest" link, comfortable for users.
  rm -f "${CASTLE_SNAPSHOTS_PATH}"latest
  ln -s `date +%F` "${CASTLE_SNAPSHOTS_PATH}"latest
}

# main code ------------------------------------------------------------------

. /usr/local/fpclazarus/bin/setup.sh default
do_compile_tool
do_compile_snapshot_programs

echo '---------------------------------------------------------------'
echo 'Setting snapshots permissions:'

chmod a+rX "${CASTLE_SNAPSHOTS_PATH}"

echo "----------- That's all folks :)"

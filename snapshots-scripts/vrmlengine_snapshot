#!/bin/bash
set -eu

# Rebuild programs in ~/sources/vrmlengine/trunk/
# (does a full rebuild, updating from SVN and cleaning to make
# a full build with newest sources),
# then move resulting binaries to ~/public_html/vrmlengine-snapshots/ subdir.

# log messages and dates in english
export LANG=C

# Make sure you have dircleaner, fpc etc. on $PATH
export PATH=/home/michalis/bin:/usr/local/bin:"${PATH}"

move_all_programs ()
{
  EXT="$1"
  OUT_PATH="$OUTPUT_PATH""$2"

  mkdir -p "$OUT_PATH"

  mv bezier_curves/bezier_curves"$EXT" "$OUT_PATH"
  mv castle/castle"$EXT" "$OUT_PATH"
  mv gen_function/gen_function"$EXT" "$OUT_PATH"
  mv glinformation/glinformation"$EXT" "$OUT_PATH"
  mv glinformation/glinformation_glut"$EXT" "$OUT_PATH"
  mv glplotter/glplotter"$EXT" "$OUT_PATH"
  mv glviewimage/glViewImage"$EXT" "$OUT_PATH"
  mv kambi_lines/kambi_lines"$EXT" "$OUT_PATH"
  mv lets_take_a_walk/lets_take_a_walk"$EXT" "$OUT_PATH"
  mv malfunction/malfunction"$EXT" "$OUT_PATH"
  mv rayhunter/rayhunter"$EXT" "$OUT_PATH"
  mv rift/rift"$EXT" "$OUT_PATH"
  mv sandbox/sandbox"$EXT" "$OUT_PATH"
  mv view3dscene/view3dscene"$EXT" "$OUT_PATH"
  mv view3dscene/tovrmlx3d"$EXT" "$OUT_PATH"
}

OUTPUT_PATH=~/public_html/vrmlengine-snapshots/`date +%F`/
mkdir -p "$OUTPUT_PATH"

OUTPUT_LOG="$OUTPUT_PATH"compilation_output.log

cd ~/sources/vrmlengine/trunk/
svn up > "$OUTPUT_LOG"

dircleaner . clean >> "$OUTPUT_LOG"

./compile_all_programs.sh unix  >> "$OUTPUT_LOG" 2>&1
move_all_programs '' linux-i386

export KAMBI_FPC_OPTIONS=-Twin32
./compile_all_programs.sh windows >> "$OUTPUT_LOG" 2>&1
move_all_programs '.exe' win-i386
export KAMBI_FPC_OPTIONS=''

echo '---------------------------------------------------------------' >> "$OUTPUT_LOG"
echo 'Compiled OK, moving to the "latest" symlink.'                    >> "$OUTPUT_LOG"

# Clean old snapshots, to conserve disk space.
# Keep only snapshots from last couple of days.
cd ~/public_html/vrmlengine-snapshots/
set +e
find . -mindepth 1 -maxdepth 1 \
  -type d -and \
  -name '????-??-??' -and \
  '(' -not -iname `date +%F` ')' -and \
  '(' -not -iname `date --date='-1 day' +%F` ')' -and \
  '(' -not -iname `date --date='-2 day' +%F` ')' -and \
  '(' -not -iname `date --date='-3 day' +%F` ')' -and \
  '(' -not -iname `date --date='-4 day' +%F` ')' -and \
  '(' -not -iname `date --date='-5 day' +%F` ')' -and \
  '(' -not -iname `date --date='-6 day' +%F` ')' -and \
  '(' -not -iname `date --date='-7 day' +%F` ')' -and \
  -exec rm -Rf '{}' ';'
set -e

# Create "latest" link, comfortable for users.
rm -f ~/public_html/vrmlengine-snapshots/latest
ln -s `date +%F` ~/public_html/vrmlengine-snapshots/latest

# Not done anymore, compositing_shaders is finished now,
# final PDF version is in SVN.
#
# echo '---------------------------------------------------------------'    >> "$OUTPUT_LOG"
# echo 'Regenerate papers PDF:'                                             >> "$OUTPUT_LOG"
# cd ~/sources/vrmlengine/trunk/papers/compositing_shaders/
# make clean >> "$OUTPUT_LOG" 2>&1
# make       >> "$OUTPUT_LOG" 2>&1
# mv -f compositing_shaders.pdf ~/public_html/

echo '---------------------------------------------------------------'    >> "$OUTPUT_LOG"
echo 'Runing tests (clean and compile everything with examples):'         >> "$OUTPUT_LOG"

cd  ~/sources/vrmlengine/trunk/kambi_vrml_game_engine/
make clean             >> "$OUTPUT_LOG" 2>&1
# make examples-laz first, to avoid creating .ppu colliding with Lazarus.
make examples-laz      >> "$OUTPUT_LOG" 2>&1
make                   >> "$OUTPUT_LOG" 2>&1
make examples          >> "$OUTPUT_LOG" 2>&1

echo '---------------------------------------------------------------'   >> "$OUTPUT_LOG"
echo 'Runing tests (auto-tests, with engine in -dRELEASE mode):'         >> "$OUTPUT_LOG"

cd tests/
make clean -C  ../                       >> "$OUTPUT_LOG" 2>&1
make       -C  ../                       >> "$OUTPUT_LOG" 2>&1
./compile_console.sh -dNO_WINDOW_SYSTEM  >> "$OUTPUT_LOG" 2>&1
./test_kambi_units -a                    >> "$OUTPUT_LOG" 2>&1

echo '---------------------------------------------------------------'    >> "$OUTPUT_LOG"
echo 'Runing tests (auto-tests, with engine in -dDEBUG mode):'            >> "$OUTPUT_LOG"

make clean -C  ../                       >> "$OUTPUT_LOG" 2>&1
# let engine be compiled by compile_console.sh, in debug mode
./compile_console.sh -dNO_WINDOW_SYSTEM  >> "$OUTPUT_LOG" 2>&1
./test_kambi_units -a                    >> "$OUTPUT_LOG" 2>&1

echo '---------------------------------------------------------------'    >> "$OUTPUT_LOG"
echo 'Making docs:'                                                       >> "$OUTPUT_LOG"
~/bin/vrmlengine_snapshot_remake_docs >> "$OUTPUT_LOG" 2>&1

echo '---------------------------------------------------------------'    >> "$OUTPUT_LOG"
echo 'Making reference using PasDoc:'                                     >> "$OUTPUT_LOG"
~/bin/vrmlengine_snapshot_remake_reference >> "$OUTPUT_LOG" 2>&1

echo "----------- That's all folks :)" >> "$OUTPUT_LOG"
